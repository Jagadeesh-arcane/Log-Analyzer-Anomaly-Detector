# .gitlab-ci.yml

stages:
  - backend
  - build-image
  - infra-plan
  - infra-apply
  - destroy

variables:
  TF_STATE_BUCKET: "log-analyzer-tfstate"
  TF_STATE_LOCK_TABLE: "terraform-locks"
  TF_STATE_KEY: "log-analyzer/terraform.tfstate"
  AWS_REGION: "us-east-1"
  IMAGE_TAG: "${CI_COMMIT_SHORT_SHA}"
  TF_CLI_ARGS: "-no-color"

backend:
  stage: backend
  image: hashicorp/terraform:1.9.5-full
  before_script:
  - apk add --no-cache bash curl unzip python3 py3-pip
  - curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
  - unzip awscliv2.zip
  - ./aws/install
  - aws --version
  script:
    - cd terraform
    - terraform init \
        -backend-config="bucket=${TF_STATE_BUCKET}" \
        -backend-config="key=${TF_STATE_KEY}" \
        -backend-config="region=${AWS_REGION}" \
        -backend-config="dynamodb_table=${TF_STATE_LOCK_TABLE}"
  only:
    - main

build-image:
  stage: build-image
  image: docker:24.0.5
  services:
    - docker:24.0.5-dind
  variables:
    DOCKER_DRIVER: overlay2
  before_script:
    - apk add --no-cache python3 py3-pip curl jq
    - curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
    - unzip awscliv2.zip
    - ./aws/install
    - aws --version
  script:
    - export ECR_REPO="${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/log-analyzer"
    - aws ecr get-login-password --region ${AWS_REGION} | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com
    - docker build -t log-analyzer:${IMAGE_TAG} .
    - docker tag log-analyzer:${IMAGE_TAG} ${ECR_REPO}:${IMAGE_TAG}
    - docker push ${ECR_REPO}:${IMAGE_TAG}
  rules:
    - if: $CI_COMMIT_BRANCH
      changes:
        - Dockerfile
        - dashboard/**
        - src/**
        - requirements.txt

infra-plan:
  stage: infra-plan
  image: hashicorp/terraform:1.9.5-full
  before_script:
  - apk add --no-cache bash curl unzip python3 py3-pip
  - curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
  - unzip awscliv2.zip
  - ./aws/install
  - aws --version
  script:
    - cd terraform
    - terraform plan -var="aws_region=${AWS_REGION}" \
                     -var="email_user=${EMAIL_USER}" \
                     -var="email_password=${EMAIL_PASSWORD}" \
                     -var="image_tag=${IMAGE_TAG}" \
                     -out=tfplan
  artifacts:
    paths:
      - terraform/tfplan

infra-apply:
  stage: infra-apply
  image: hashicorp/terraform:1.9.5-full
  before_script:
  - apk add --no-cache bash curl unzip python3 py3-pip
  - curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
  - unzip awscliv2.zip
  - ./aws/install
  - aws --version
  script:
    - cd terraform
    - terraform apply -auto-approve tfplan

destroy:
  stage: destroy
  image: hashicorp/terraform:1.9.5-full
  when: manual
  before_script:
  - apk add --no-cache bash curl unzip python3 py3-pip
  - curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
  - unzip awscliv2.zip
  - ./aws/install
  - aws --version
  script:
    - cd terraform
    - terraform destroy -auto-approve -var="aws_region=${AWS_REGION}" \
                                             -var="email_user=${EMAIL_USER}" \
                                             -var="email_password=${EMAIL_PASSWORD}" \
                                             -var="image_tag=${IMAGE_TAG}"
