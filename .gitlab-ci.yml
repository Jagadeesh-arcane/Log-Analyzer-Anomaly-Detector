image: alpine:3.19

stages:
  - infra-init
  - build
  - deploy
  - destroy

variables:
  TF_STATE_BUCKET: "log-analyzer-tfstate"
  TF_STATE_KEY: "terraform.tfstate"
  AWS_REGION: "us-east-1"
  IMAGE_TAG: "latest"

before_script:
  # Install dependencies
  - apk add --no-cache bash curl jq docker python3 py3-pip git
  - pip install awscli
  # Install Terraform
  - wget https://releases.hashicorp.com/terraform/1.8.5/terraform_1.8.5_linux_amd64.zip
  - unzip terraform_1.8.5_linux_amd64.zip && mv terraform /usr/local/bin/ && rm terraform_1.8.5_linux_amd64.zip
  - terraform --version

infra_init:
  stage: infra-init
  script:
    - cd terraform
    - terraform init
    - terraform plan -out=tfplan
  artifacts:
    paths:
      - terraform/tfplan

build:
  stage: build
  services:
    - docker:dind
  variables:
    DOCKER_DRIVER: overlay2
  script:
    - $(aws ecr get-login --no-include-email --region $AWS_REGION)
    - docker build -t log-analyzer .
    - docker tag log-analyzer:latest ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/log-analyzer:${IMAGE_TAG}
    - docker push ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/log-analyzer:${IMAGE_TAG}

deploy:
  stage: deploy
  script:
    - cd terraform
    - terraform apply -auto-approve tfplan

destroy:
  stage: destroy
  when: manual
  script:
    - cd terraform
    - terraform destroy -auto-approve
