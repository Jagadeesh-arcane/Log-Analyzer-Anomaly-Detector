# .gitlab-ci.yml

stages:
  - lint
  - backend
  - build-image
  - infra-plan
  - infra-apply
  - destroy

variables:
  TF_STATE_BUCKET: "log-analyzer-tfstate"
  TF_STATE_LOCK_TABLE: "terraform-locks"
  TF_STATE_KEY: "log-analyzer/terraform.tfstate"
  AWS_REGION: "us-east-1"
  IMAGE_TAG: "${CI_COMMIT_SHORT_SHA}"
  TF_CLI_ARGS: "-no-color"

# ---------------------------------------
# Lint / Validate Terraform
# ---------------------------------------
lint:
  stage: lint
  image: python:3.11-slim
  before_script:
    - set -e
    - apt-get update && apt-get install -y curl unzip git
    - echo "Installing Terraform..."
    - mkdir -p /tmp/terraform-install && cd /tmp/terraform-install
    - curl -s -L https://releases.hashicorp.com/terraform/1.9.5/terraform_1.9.5_linux_amd64.zip -o terraform.zip
    - unzip -qo terraform.zip
    - mv /tmp/terraform-install/terraform /usr/local/bin/
    - terraform version
    - cd $CI_PROJECT_DIR
  script:
    - cd terraform
    - terraform init -backend=false
    - terraform fmt -check
    - terraform validate

# ---------------------------------------
# Terraform Backend Initialization
# ---------------------------------------
backend:
  stage: backend
  image: python:3.11-slim
  before_script:
    - set -e
    - apt-get update && apt-get install -y curl unzip groff less git
    - echo "Installing AWS CLI..."
    - curl -s "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
    - unzip -q awscliv2.zip
    - ./aws/install
    - aws --version
    - echo "Installing Terraform..."
    - mkdir -p /tmp/terraform-install && cd /tmp/terraform-install
    - curl -s -L https://releases.hashicorp.com/terraform/1.9.5/terraform_1.9.5_linux_amd64.zip -o terraform.zip
    - unzip -qo terraform.zip
    - mv /tmp/terraform-install/terraform /usr/local/bin/
    - terraform version
    - cd $CI_PROJECT_DIR
  script:
    - cd terraform
    - terraform init -backend-config="bucket=${TF_STATE_BUCKET}" -backend-config="key=${TF_STATE_KEY}" -backend-config="region=${AWS_REGION}" -backend-config="dynamodb_table=${TF_STATE_LOCK_TABLE}"
  only:
    - main

# ---------------------------------------
# Docker Image Build & Push to ECR
# ---------------------------------------
build-image:
  stage: build-image
  image: docker:24.0.5
  services:
    - docker:24.0.5-dind
  variables:
    DOCKER_DRIVER: overlay2
  before_script:
    - apk add --no-cache python3 py3-pip curl jq
    - pip install awscli
    - aws --version
  script:
    - export ECR_REPO="${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/log-analyzer"
    - aws ecr get-login-password --region ${AWS_REGION} | docker login --username AWS --password-stdin ${ECR_REPO}
    - docker build -t log-analyzer:${IMAGE_TAG} .
    - docker tag log-analyzer:${IMAGE_TAG} ${ECR_REPO}:${IMAGE_TAG}
    - docker push ${ECR_REPO}:${IMAGE_TAG}
  only:
    - main
  # rules:
  #   - if: $CI_COMMIT_BRANCH
  #     changes:
  #       - Dockerfile
  #       - dashboard/**
  #       - src/**
  #       - requirements.txt

# ---------------------------------------
# Terraform Plan
# ---------------------------------------
infra-plan:
  stage: infra-plan
  image: python:3.11-slim
  before_script:
    - set -e
    - apt-get update && apt-get install -y curl unzip groff less git
    - echo "Installing AWS CLI..."
    - curl -s "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
    - unzip -q awscliv2.zip
    - ./aws/install
    - aws --version
    - echo "Installing Terraform..."
    - mkdir -p /tmp/terraform-install && cd /tmp/terraform-install
    - curl -s -L https://releases.hashicorp.com/terraform/1.9.5/terraform_1.9.5_linux_amd64.zip -o terraform.zip
    - unzip -qo terraform.zip
    - mv /tmp/terraform-install/terraform /usr/local/bin/
    - terraform version
    - cd $CI_PROJECT_DIR
  script:
    - cd terraform
    - terraform plan -var="aws_region=${AWS_REGION}" -var="email_user=${EMAIL_USER}" -var="email_password=${EMAIL_PASSWORD}" -var="image_tag=${IMAGE_TAG}" -out=tfplan
  artifacts:
    paths:
      - terraform/tfplan

# ---------------------------------------
# Terraform Apply
# ---------------------------------------
infra-apply:
  stage: infra-apply
  image: python:3.11-slim
  dependencies:
    - infra-plan
  before_script:
    - set -e
    - apt-get update && apt-get install -y curl unzip groff less git
    - echo "Installing AWS CLI..."
    - curl -s "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
    - unzip -q awscliv2.zip
    - ./aws/install
    - aws --version
    - echo "Installing Terraform..."
    - mkdir -p /tmp/terraform-install && cd /tmp/terraform-install
    - curl -s -L https://releases.hashicorp.com/terraform/1.9.5/terraform_1.9.5_linux_amd64.zip -o terraform.zip
    - unzip -qo terraform.zip
    - mv /tmp/terraform-install/terraform /usr/local/bin/
    - terraform version
    - cd $CI_PROJECT_DIR
  script:
    - cd terraform
    - terraform apply -auto-approve tfplan

# ---------------------------------------
# Terraform Destroy
# ---------------------------------------
destroy:
  stage: destroy
  image: python:3.11-slim
  when: manual
  before_script:
    - set -e
    - apt-get update && apt-get install -y curl unzip groff less git
    - echo "Installing AWS CLI..."
    - curl -s "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
    - unzip -q awscliv2.zip
    - ./aws/install
    - aws --version
    - echo "Installing Terraform..."
    - mkdir -p /tmp/terraform-install && cd /tmp/terraform-install
    - curl -s -L https://releases.hashicorp.com/terraform/1.9.5/terraform_1.9.5_linux_amd64.zip -o terraform.zip
    - unzip -qo terraform.zip
    - mv /tmp/terraform-install/terraform /usr/local/bin/
    - terraform version
    - cd $CI_PROJECT_DIR
  script:
    - cd terraform
    - terraform destroy -auto-approve -var="aws_region=${AWS_REGION}" -var="email_user=${EMAIL_USER}" -var="email_password=${EMAIL_PASSWORD}" -var="image_tag=${IMAGE_TAG}"
